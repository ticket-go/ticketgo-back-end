name: TicketGo Backend Pipeline

on:
  push:
    branches: [new-prod]
  pull_request:
    branches: [new-prod]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        name: Checkout code

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12.0"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./config/requirements/requirements.txt

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

      - name: Make migrations
        run: |
          python manage.py makemigrations --dry-run > migrations_check.txt || true

      - name: Check for new migrations
        id: check_migrations
        run: |
          if grep -q "No changes detected" migrations_check.txt; then
            echo "new_migrations=false" >> $GITHUB_ENV
          else
            echo "new_migrations=true" >> $GITHUB_ENV
          fi

      - name: Backup
        if: env.new_migrations == 'true'
        run: |
          python manage.py backupdb

      - name: Run migrations
        run: |
          python manage.py migrate

      - name: Load initial data if necessary
        run: |
          if python manage.py showmigrations --plan | grep '\[ \]'; then
            python manage.py loaddata config/initial_data/address.json &&
            python manage.py loaddata config/initial_data/users.json &&
            python manage.py loaddata config/initial_data/events.json &&
            python manage.py loaddata config/initial_data/cart_payment.json &&
            python manage.py loaddata config/initial_data/tickets.json
          fi

      - name: Collect static files
        run: |
          python manage.py collectstatic --noinput

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        name: Checkout code

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12.0"

      - name: Install dependencies
        run: |
          pip install -r ./config/requirements/requirements.txt

      - name: Run tests
        run: |
          PYTHONPATH=. pytest
